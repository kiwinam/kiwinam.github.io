<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>키위남</title>
    <link>https://kiwinam.com/</link>
    <description>Recent content on 키위남</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sun, 08 Mar 2020 23:22:08 +0900</lastBuildDate>
    
	<atom:link href="https://kiwinam.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>REST API #2 - 디자인 가이드</title>
      <link>https://kiwinam.com/posts/35/rest-api-guide/</link>
      <pubDate>Sun, 08 Mar 2020 23:22:08 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/35/rest-api-guide/</guid>
      <description>REST Series  REST API #1 - 이해하기 REST API #2 - 디자인 가이드 (현재 글)  지난 포스팅에 이어, REST API 디자인 가이드에 대해 포스팅 해보겠습니다.
이전 편을 안보신 분이 있다면 위 링크에서 확인해주세요.

우린 소프트웨어 개발자로서 대부분의 시간을 REST API 를 사용하거나 구축하는데 사용하고 있습니다.
백엔드 개발자건, 안드로이드 개발자건, 프론트엔드 개발자건 다들 REST 한 API 를 사용하고 있죠.
이전 포스팅에서 우리가 사용하는 REST API 란 어떤 것이라는 걸 말씀드렸습니다.</description>
    </item>
    
    <item>
      <title>REST API #1 - 이해하기</title>
      <link>https://kiwinam.com/posts/34/what-is-rest-api/</link>
      <pubDate>Tue, 18 Feb 2020 07:15:00 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/34/what-is-rest-api/</guid>
      <description>REST Series  REST API #1 - 이해하기 (현재 글) REST API #2 - 디자인 가이드  
REST API
소프트웨어 엔지니링을 공부하다 보면 어느샌가 마주하는 녀석입니다.
모두가 얘기하고 대부분이 사용하지만 REST API 가 무엇인지, 왜 쓰는지에 대해 알고 설명할 수 있는 사람은 그렇게 많지 않습니다.
물론 저도 그 중 하나였고, 이 글을 통해 더 명확하게 REST API 에 대해 정의하고자 합니다.
이 글을 통해 REST API 의 개념과 어떻게 사용해야 하는지에 대해서 알아보고자 합니다.</description>
    </item>
    
    <item>
      <title>Software 버전 관리 규칙, 너만 모르는 Semantic versioning </title>
      <link>https://kiwinam.com/posts/33/version-naming/</link>
      <pubDate>Sun, 02 Feb 2020 01:30:00 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/33/version-naming/</guid>
      <description>소프트웨어를 개발하다보면 정말 수많은 규칙들을 세우고 없애고 수정하는 것 같아요.
저도 혼자 개발하고 흡&amp;ndash;족 할 때는 이런 규칙과 컨벤션들에 대해 무관심 했었는데,
이제 프로로 데뷔한지 2년 정도 지났고, 최근 이직한 회사에서 컨벤션 관련된 작업을 진행하면서 함께 정했던 버전 관리 규칙 에 대해 공유하려고 합니다.


사실 개발자들 뿐만 아니라 개발자가 아닌 일반인 분들에게도 이 버전명 에 대해서는 익숙한 분이 많을거라 생각해요.
79.0.3945.130
  크롬의 최신 버전   어떤가요?</description>
    </item>
    
    <item>
      <title>[Git] 원격 (remote) 브랜치 삭제</title>
      <link>https://kiwinam.com/posts/32/git-remove-remote/</link>
      <pubDate>Sat, 04 Jan 2020 18:00:00 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/32/git-remove-remote/</guid>
      <description>Git (CMD) 에서 원격 브랜치를 삭제하는 방법은 2가지가 있습니다.
먼저 삭제할 브랜치의 이름을 develop 이라고 가정해보겠습니다.

방법 1 # remote_name 은 원격 저장소의 이름입니다. # branch_name 은 삭제할 브랜치의 이름입니다. # # git push &amp;lt;remote_name&amp;gt; --delete &amp;lt;branch_name&amp;gt; git push origin --delete develop  
방법 2 # git branch -d &amp;lt;branch_name&amp;gt; # git push &amp;lt;remote_name&amp;gt; --delete &amp;lt;branch_name&amp;gt; git branch -d develop git push origin develop  참조 (Stack overflow) How do I delete a Git branch locally and remotely?</description>
    </item>
    
    <item>
      <title>[Git] macOS xcrun 에러 해결 방법</title>
      <link>https://kiwinam.com/posts/31/git-xcrun/</link>
      <pubDate>Wed, 01 Jan 2020 18:00:00 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/31/git-xcrun/</guid>
      <description>macOS 의 업데이트 시, 특히 macOS 의 이름이 변경되는 큰 업데이트가 진행 된 다음에 종종 이런 경우가 있습니다.
지금까지 알려진 해당 이슈가 발생했던 업데이트는
 macOs High Sierra 업데이트
 macOS Sierra 업데이트
 OS X El Capitan 업데이트
  이정도면 큼직한 업데이트마다 만날 수 있는 에러라고 볼 수 있습니다.

xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun  error 내용은 위 처럼 나오고,</description>
    </item>
    
    <item>
      <title>[Mac] Homebrew 설치 &amp; 사용법</title>
      <link>https://kiwinam.com/posts/30/install-homebrew/</link>
      <pubDate>Tue, 31 Dec 2019 12:01:32 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/30/install-homebrew/</guid>
      <description>Homebrew macOS 의 패키지 관리자인 Homebrew 는 mac 를 많이 사용하는 엔지니어들한테 유용한 커맨드 도구입니다.
마치 ubuntu 의 apt-get 처럼 필요한 프로그램을 설치하거나 삭제, 업데이트 등의 동작을 손쉽게 하도록 도와줍니다.

설치 방법 /usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;  터미널에 위 명령어를 복사하고 붙여 넣어 주세요.
그럼 Homebrew 의 설치가 시작됩니다.
정말 간단하죠?

Homebrew 사용법 Homebrew 는 설치처럼 사용하는 방법도 간단합니다.
yum 과 apt-get 에 익숙하신 분들이라면 더 쉽게 사용할 수 있을거에요.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://kiwinam.com/about/</link>
      <pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/about/</guid>
      <description> -- 

전 여행을 좋아하는 엔지니어입니다 :)
스타트업에서 좋은 사람들과 새로운 경험을 하는 것을 좋아합니다.
Find me  https://github.com/kiwinam https://www.linkedin.com/in/charlie-park-19731b173/ https://www.rocketpunch.com/@mals93  </description>
    </item>
    
    <item>
      <title>[MySQL] 사용자 추가, 권한 설정, 삭제</title>
      <link>https://kiwinam.com/posts/29/mysql-add-user/</link>
      <pubDate>Thu, 02 May 2019 23:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/29/mysql-add-user/</guid>
      <description>0. tl; dr MySQL/MariaDB 계정 생성 MySQL 사용자 생성 문법
CREATE USER &#39;아이디&#39;@&#39;접속대역&#39; IDENTIFIED BY &#39;패스워드&#39;;  예시
CREATE USER &#39;kiwinam&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;PassWord123&#39;; GRANT ALL PRIVILEGES ON *.* TO &#39;kiwinam&#39;@&#39;localhost&#39; WITH GRANT OPTION;  

1. MySQL 로그인 mysql -u root -p  사용자 계정을 추가하기 위해서는 root 계정으로 로그인 해야합니다.


2. 생성된 계정 확인 이미 생성되어 있는 계정들을 확인하고 싶은 경우 아래와 같이 입력하면 됩니다.</description>
    </item>
    
    <item>
      <title>[MariaDB] Mac 에서 Mariadb 설치</title>
      <link>https://kiwinam.com/posts/28/install-mariadb-on-mac/</link>
      <pubDate>Thu, 21 Mar 2019 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/28/install-mariadb-on-mac/</guid>
      <description>[Mac] Mariadb 설치

0. Mariadb 란 Mariadb 는 Mysql 의 창업자이자 핵심 개발자인 몬티 와이드니어스가 회사를 2009년에 썬 마이크로즈시스템에 팔고 나온 뒤 다시 만든 RDBMS 입니다.
Mysql 과 마찬가지로 몬티의 딸 이름을 따와서 MariaDB 라고 이름을 지었습니다.
Mysql 의 핵심 개발자가 만든 Mariadb 이기 때문에, 대부분의 명령어들이 Mysql 과 유사합니다.
하지만 Mysql 과 Mariadb 의 핵심적인 차이점은 라이센스에 있습니다.
오라클이 라이센스를 보유하고 있는 Mysql 과 다르게 MariaDB 는 GPL V2 를 따르는 순수한 오픈 소스이고, 그렇기 때문에 누구든지 커뮤니티 버전을 다운받고 사용할 수 있습니다.</description>
    </item>
    
    <item>
      <title>[Git] warning: LF will be CRLF 해결법</title>
      <link>https://kiwinam.com/posts/27/git-lf-will-be-crlf/</link>
      <pubDate>Fri, 15 Feb 2019 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/27/git-lf-will-be-crlf/</guid>
      <description>[Git] warning: LF will be CRLF

 
터미널 or CMD 에서 Git command 를 사용하는데 위 사진 같은 warning 이 나오는 경우가 있습니다.
왜 이러는 것이고 또 어떻게 해결해야 할까요?

Shutup and code Window user git config --global core.autocrlf true
Mac user git config --global core.autocrlf true input


해당 문제는 OS 별로 엔터키를 입력 했을 때, End line 의 표시 형태가 달라서 발생하는 문제입니다.</description>
    </item>
    
  </channel>
</rss>