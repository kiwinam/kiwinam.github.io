<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Kiwinam</title>
    <link>https://kiwinam.com/categories/android/</link>
    <description>Recent content in Android on Kiwinam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Sat, 29 Dec 2018 10:35:56 +0900</lastBuildDate>
    
	<atom:link href="https://kiwinam.com/categories/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[안드로이드] 네비게이션 드로어 (Navigation drawer) 사용법</title>
      <link>https://kiwinam.com/posts/26/</link>
      <pubDate>Sat, 29 Dec 2018 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/26/</guid>
      <description>[안드로이드] 네비게이션 드로어 (Navigation drawer) 사용법

구글 머티리얼 디자인 가이드 중 네비게이션 드로어
네비게이션 드로어는 화면 왼쪽 가장자리에 위치해 있고 앱을 탐색할 수 있는 하나의 패널입니다.
이걸 잘 활용한다면 특정 메뉴를 찾기 위해 클릭이 많이 일어나는 (Deep depth) 문제를 해결할 수 있습니다.
평상시에는 화면 밖에 가려져 있지만 왼쪽 스와이프나 왼쪽 상단 메뉴 버튼을 클릭하면 위 사진처럼 나옵니다.
그럼 네비게이션 드로어를 어떻게 구현하는지 알아보겠습니다.


1. Result  이번 포스팅에서 진행한 네비게이션 드로어 결과 화면</description>
    </item>
    
    <item>
      <title>[안드로이드] 툴바 사용법 (버튼 추가) - add button to tool bar</title>
      <link>https://kiwinam.com/posts/25/</link>
      <pubDate>Wed, 26 Dec 2018 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/25/</guid>
      <description>[안드로이드] 툴바 사용법 (버튼 추가) - add button to tool bar

안드로이드 API 21 (롤리팝 5.0) 버전부터 기존 Action bar 를 대체할 tool bar 라는 앱 상단에 표시되는 뷰가 추가되었습니다.
안드로이드 개발자 뿐만 아니라 일반 사용자들에게도 상당히 익숙한 뷰입니다.
머티리얼 디자인 가이드 공식 문서 중 Top App bars

기존 액션바에서 있던 높이 변경 제약, 액션바 내부 뷰 추가 불가능 등의 문제점을
툴바에서는 유연하게 대처할 수 있습니다.
그럼 이제 기본적인 툴바 사용법과 어떻게 툴바에 버튼을 추가하는지 알려드리겠습니다.</description>
    </item>
    
    <item>
      <title>[Android Studio 3.0 xml layout Preview 오류 해결 방법</title>
      <link>https://kiwinam.com/posts/24/</link>
      <pubDate>Sat, 10 Feb 2018 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/24/</guid>
      <description>Android Studio 3.0 xml layout Preview 오류 해결 방법

Android Studio 를 2.3.x 버전으로 사용하다 이번에 3.0 버전으로 업데이트 하였습니다.
업데이트를 하니 Layout xml Preview 부분이 보이지 않고 아래와 같은 에러 메시지를 표시했습니다.
Exception raised during rendering: Could not initialize class android.graphics.Typeface
java.lang.NoClassDefFoundError: Could not initialize class android.graphics.Typeface

이 에러의 원인은 Font.xml 파일을 변경해서 입니다.
저희가 Android 2.x 버전을 사용하면서 Layout Preview 에 한글을 표시하기 위해
Font.xml 파일을 수정한 적이 있을텐데요.</description>
    </item>
    
    <item>
      <title>[안드로이드] startActivityForResult ,onActivityResult 사용법</title>
      <link>https://kiwinam.com/posts/23/</link>
      <pubDate>Fri, 09 Feb 2018 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/23/</guid>
      <description>[안드로이드] startActivityForResult ,onActivityResult 사용법

안드로이드 개발을 진행하다 보면 단순히 액티비티를 전환하고 끝! 이 아니라
후속 액티비티에서 작업한 결과물을
호출한 액티비티에서 사용하고 싶은 경우가 왕왕 있습니다.

예를 들자면 회원가입을 진행할 때 ,
회원가입 액티비티에서 다이얼로그를 띄우고
다이얼로그에서 주소를 입력하게 하고, 완료 버튼을 누르면 다시 액티비티로 가져오는 경우나,
(이 경우는 CallBack 으로도 가능합니다.)

자신의 앱에서 카메라 앱을 호출하고 그 결과를 다시 자신의 앱으로 가져오는 경우가 있습니다.
이러한 경우 사용하는 방법이 startActivityForResult 입니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] 엑셀 파일 생성, 내보내기</title>
      <link>https://kiwinam.com/posts/21/</link>
      <pubDate>Thu, 07 Dec 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/21/</guid>
      <description>[안드로이드] 엑셀 파일 생성, 내보내기
어플리케이션을 만들다 보면 사용자가 저장한 데이터를 가공하여 내보내 주는 기능을 구현할 때가 있습니다.
데이터 가공에 가장 적합한 엑셀 파일을 만들어 공유하는 것을 목표로 포스팅하겠습니다.

1. Result 

2. Step by Step 2-1. Apache POI 2-1-1. 라이브러리 다운로드  안드로이드 (자바) 에서 엑셀 파일을 바로 쓰고 읽고 수정 하는 일련의 작업들을 바로 수행할 수는 없습니다. 이러한 작업을 할 수 있도록 도와주는 라이브러리인 Apache 에서 제공하는 POI 라이브러리를 이용하여 엑셀을 다루도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] - android.content.res.Resources$NotFoundException: String resource ID #0x1</title>
      <link>https://kiwinam.com/posts/19/</link>
      <pubDate>Thu, 23 Nov 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/19/</guid>
      <description>[안드로이드] - android.content.res.Resources$NotFoundException: String resource ID #0x1
FATAL EXCEPTION: main Process: , PID: 4012 android.content.res.Resources$NotFoundException: String resource ID #0x9  안드로이드 개발 중
android.content.res.Resources$NotFoundException: String resource ID #0x1
라는 에러를 보았습니다.

TextView 에 setText 메소드를 사용할 때 Int 타입의 데이터를 넣어서 발생하는 에러입니다.
보통 setText 메서드에 숫자를 바로 넣으면 바로 빨간색 밑줄이 생겨서 에러인 것을 알아보기 쉬운데,
( Int type 을 바로 넣는 경우 빨간 줄이 보입니다.)</description>
    </item>
    
    <item>
      <title>[안드로이드] 카카오톡 공유 기능 , 카카오 링크 API 사용법</title>
      <link>https://kiwinam.com/posts/20/</link>
      <pubDate>Thu, 23 Nov 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/20/</guid>
      <description>[안드로이드] 카카오톡 공유 기능 , 카카오 링크 API 사용법
어플리케이션 기획 중에 콘텐츠 공유 기능이 있는 경우가 많습니다.
공유할 수 있는 수단이 다양하게 있지만 대한민국에서 카카오 플랫폼이 가장 넓은 플랫폼이라 할 수 있죠.
그래서 카카오톡 링크 API 를 사용하여 아래 사진과 같이 공유 기능을 구현하는 경우가 많습니다.
(사진 출처 : Kakao Developer , 카카오 서비스 API 소개 )

Kakao Developer에 개발자 문서가 아주 상세히 기술 되어 있습니다.
저도 카카오 개발자센터에서 제공하는 문서를 보고 구현 했었지만 참고하실 분들을 위해 카카오 링크 기능 구현하는 것을 진행해 보도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] Bottom sheet dialog 사용하기</title>
      <link>https://kiwinam.com/posts/18/</link>
      <pubDate>Wed, 22 Nov 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/18/</guid>
      <description>[안드로이드] Bottom sheet dialog 사용하기
머티리얼 디자인에서 바텀 시트는 두 가지의 종류가 있습니다
영구 바닥 시트
모달 바텀 시트 (우)

이번 예제에서 만들어볼 것은 모달 바텀 시트입니다.
모달 바텀 시트는 기존의 콘텐츠와 상호 작용 하거나 다이얼로그의 대체로 사용됩니다.
먼저 결과물입니다.

1. Result 
2. Step by Step 2-1. 라이브러리 추가  BottomSheet 를 사용하기 위해선 Design 라이브러리가 필요합니다.  build.gradle (app)
compile &#39;com.android.support:design:26.+&#39;  
2-2. 바텀 시트 다이얼로그 레이아웃 생성  다이얼로그 레이아웃은 구성하기 나름입니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] EditText 화폐 단위 표시 (세자리 콤마)</title>
      <link>https://kiwinam.com/posts/17/</link>
      <pubDate>Tue, 21 Nov 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/17/</guid>
      <description>[안드로이드] EditText 화폐 단위 표시 (세자리 콤마)
사용자에게 화폐를 입력 받아 표시해줄 경우가 종종 있습니다.
이럴 때 입력 받은 숫자를 원화 단위 (1,000,000 과 같이 ) 로 바로 바꿔주는 방법입니다.

1. Result 
2. Step by Step 2-1 Layout 구성 &amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; xmlns:app=&amp;quot;http://schemas.android.com/apk/res-auto&amp;quot; xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;match_parent&amp;quot; tools:context=&amp;quot;com.example.charlie.wontest.MainActivity&amp;quot;&amp;gt; &amp;lt;EditText android:id=&amp;quot;@+id/wonEt&amp;quot; android:hint=&amp;quot;금액을 입력해주세요.&amp;quot; android:paddingLeft=&amp;quot;8dp&amp;quot; android:textSize=&amp;quot;18sp&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:layout_marginLeft=&amp;quot;8dp&amp;quot; android:layout_marginRight=&amp;quot;8dp&amp;quot; android:layout_marginTop=&amp;quot;8dp&amp;quot; android:layout_centerInParent=&amp;quot;true&amp;quot; android:inputType=&amp;quot;number&amp;quot; android:gravity=&amp;quot;end&amp;quot; /&amp;gt; &amp;lt;/RelativeLayout&amp;gt;   Layout 은 최대한 간단하게 구성해봤습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] 커스텀 다이얼로그 [2] - ClickListener, Callback</title>
      <link>https://kiwinam.com/posts/16/</link>
      <pubDate>Sun, 15 Oct 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/16/</guid>
      <description>[안드로이드] 커스텀 다이얼로그 [2] - ClickListener, Callback
지난 포스팅에선 커스텀 다이얼로그를 생성하고 보여주는 것을 해보았습니다.
이번엔 커스텀 다이얼로그 안에서의 클릭 이벤트 (ClickListener) 를 어떻게 다루는지에 대해 설명해드리도록 하겠습니다.
일단 쉽게 생각하면 다이얼로그도 View 에 속하는 컴포넌트로
다루는 방법이 크게 다르지 않다는 점입니다.
먼저 간단하게 CustomDialog 에서 ClickListener 를 등록해보도록 하겠습니다.
그 이후에 Activity -&amp;gt; Dialog -&amp;gt; Activity 로 파라미터를 넘기는 것을 구현하겠습니다.

먼저 결과입니다.
1. Result 2. Step by Step 2-1.</description>
    </item>
    
    <item>
      <title>[안드로이드] 커스텀 다이얼로그 [1] - 생성</title>
      <link>https://kiwinam.com/posts/15/</link>
      <pubDate>Fri, 18 Aug 2017 10:25:38 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/15/</guid>
      <description>[안드로이드] 커스텀 다이얼로그 [1] - 생성
안드로이드 커스텀 다이얼로그 만드는 법.

안드로이드에서 제공하는 AlertDialog 에선 단순하게 Title, Message 등 텍스트만 표시가 가능했었습니다.
Custom Dialog 에서는 말 그대로 내가 원하는 다이얼로그 모양을 만들고 기능을 추가할 수 있습니다.
Activity 에서 Dialog 로 값을 넘길 수도 있고
Dialog 에서 Activity 로 결과 값을 넘겨줄 수도 있습니다.
이번 포스팅에선 간단히 만드는법만 소개하고 다음 포스팅에서 더 자세히 다루겠습니다.

먼저 결과입니다.
1. Result</description>
    </item>
    
    <item>
      <title>[안드로이드] status bar 색상 변경하기, 아이콘 색상 변경하기</title>
      <link>https://kiwinam.com/posts/14/</link>
      <pubDate>Thu, 01 Jun 2017 09:56:28 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/14/</guid>
      <description>[안드로이드] status bar 색상 변경하기
안드로이드 status bar는 최상단에 위치한 기기의 상태를 표시해주는 Bar 입니다.
API 21 버전 - 롤리팝 버전 이상부터 Status bar (상태바) 색상 변경이 가능하고
API 23 버전 - 마시멜로우 부터는 상태바에 있는 아이콘 색상이 변경 가능합니다.
먼저 상태바 색상 변경 해보겠습니다.

상태바 색상 변경 방법 1. 자바 코드에서 적용하기 빌드 버전을 확인하고 v21 이상이면 상태바의 색상을 검정색으로 바꿨습니다.
if (Build.VERSION.SDK_INT &amp;gt;= 21) { // 21 버전 이상일 때 getWindow().</description>
    </item>
    
    <item>
      <title>[안드로이드] Android Studio 레이아웃 프리뷰(Preview) 한글 깨짐</title>
      <link>https://kiwinam.com/posts/13/</link>
      <pubDate>Fri, 19 May 2017 16:54:00 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/13/</guid>
      <description>[안드로이드] Android Studio 레이아웃 프리뷰(Preview) 한글 깨짐
안드로이드 스튜디오 Preview 가 깨지는 현상의 원인은 아이러니 하게도 한글 표시 폰트가 한글을 제대로 표시 처리하지 못하기 때문입니다.
현재 안드로이드 스튜디오에서 설정된 ko 언어 표시는 &amp;ldquo;NotoSansCJK&amp;rdquo; 로 되어 있습니다.
이 폰트를 한글 처리가 가능한 폰트로 바꿔주면 됩니다. 보통 많이 사용하는 폰트로 바꿔주시면 됩니다.

설정 파일이 위치한 곳은
안드로이드 설치가 되어 있는 폴더/plugins/android/lib/layoutlib/data/fonts/fonts.xml
(OS X 에선 Application/AndroidStudio (우클릭/Show Package Content) 입니다.)
여기에서 family lang = &amp;ldquo;ko&amp;rdquo; 라고 되어있는 곳에 설정된 폰트를 아무 폰트로 바꿔주시면 됩니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] - Pull to refresh 당겨서 새로고침 (SwipeRefreshLayout)</title>
      <link>https://kiwinam.com/posts/12/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/12/</guid>
      <description>[안드로이드] - Pull to refresh 당겨서 새로고침 (SwipeRefreshLayout)
당겨서 새로고침 (pull to refresh) 는 많은 APP에서 만날수 있는 친숙한 패턴입니다.
&amp;lsquo;구글 가이드&amp;rsquo;에도 수동으로 동기화 하는 방법 중 제스처를 통해 내용물 갱신을 시작하도록 요구합니다.
이 패턴을 구현한 수많은 라이브러리가 있지만 구글에서 제공하는 가장 간단한 라이브러리를 구현하는 방법에 대해 설명해드리겠습니다.
1. Result 
2. Step by Step 2-1. 라이브러리 추가 SwipeRefreshLayout 를 통해 당겨서 새로고침을 구현하기 위해 추가해야할 라이브러리는 &amp;lsquo;com.android.support:design&amp;rsquo; 라이브러리입니다. 예제에서 RecyclerView 위에서 &amp;lsquo; pull to refresh &amp;rsquo; 제스쳐를 실행할거라</description>
    </item>
    
    <item>
      <title>[안드로이드] RecyclerView [3] Divider 구분선 넣기</title>
      <link>https://kiwinam.com/posts/10/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/10/</guid>
      <description>[안드로이드] RecyclerView [3] Divider 구분선 넣기

( Divider 가 적용된 RecyclerView 예제, 출저 Google Material Design Guide )

RecyclerView 에서 구분선 혹은 구분자를 추가하는 방법은 다양하게 있습니다.
하지만 ListView xml 처럼 간단하게 android:divider 로 지정할 수 있는 부분이 아니라 코드적으로 구현 할 수 있습니다.
그 중 가장 간단한 방법에 대해 설명해드리겠습니다.

1. Result 구분선 (Divider) 만 넣는 방법과 구분선 + 공백 넣는 방법에 대해 설명해드리겠습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] RecyclerView [2] OnItemClick 리스너 구현</title>
      <link>https://kiwinam.com/posts/9/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/9/</guid>
      <description>[안드로이드] RecyclerView [2] OnItemClick 리스너 구현

RecyclerView 에서는 ListView에서와는 다르게
ClickListener 를 따로 구현해서 등록해줘야합니다.
Adapter에서 OnClick 를 구현해줘도 되고 제가 구현한 방법 처럼 따로 클래스를 만들어서
ItemTouchListener 를 구현해도 됩니다.

1. Result 
2. Step by Step 2-1. RecyclerView 구현 안드로이드 RecyclerView 의 간단한 구현 방법은 이전 포스팅 글로 대체 하겠습니다.
[[안드로이드] RecyclerView 간단한 사용법]

2-2. OnItemTouchListener RecyclerItemClickListener.java
public class RecyclerItemClickListener implements RecyclerView.OnItemTouchListener { private OnItemClickListener mListener; public interface OnItemClickListener { void onItemClick(View view, int position); void onLongItemClick(View view, int position); } GestureDetector mGestureDetector; public RecyclerItemClickListener(Context context, final RecyclerView recyclerView, OnItemClickListener listener) { mListener = listener; mGestureDetector = new GestureDetector(context, new GestureDetector.</description>
    </item>
    
    <item>
      <title>[안드로이드] RecyclerView [1] 간단한 사용법</title>
      <link>https://kiwinam.com/posts/8/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/8/</guid>
      <description>[안드로이드] RecyclerView 간단한 사용법

안드로이드에서 Recycler View 를 간단하게 사용하는 방법에 대해 포스팅 하겠습니다!
안드로이드를 배우다 보면 리사이클러 뷰, recycler view, list view 에 관해 상당히 많이 보고 듣게 되는데요&amp;hellip;
도대체 저 리사이클러뷰가 어떤 녀석이길래 저렇게 많이 언급 되는지 가볍게 알아보고 가도록 하겠습니다.
먼저 프로 앱등이인 전 앱스토어의 사진을 하나 가져 왔습니다
(코쓱)

위 사진을 보면 빨간 테두리에 있는 내용들은
큰 틀은 (포맷) 변하지 않고 콘텐츠 (앱 로고와 이름, 카테고리) 만 변하는 것을 알 수 있습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] JSON 데이터 주고 받기</title>
      <link>https://kiwinam.com/posts/7/</link>
      <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/7/</guid>
      <description>[안드로이드] JSON 데이터 주고 받기 1. Result 
2. Step by step 데이터를 JSON Obejct 로 보내고 받는 방법 2-1. Send Object private void sendObject(){ JSONObject jsonObject = new JSONObject(); try{ jsonObject.put(&amp;quot;nation&amp;quot;, mJsonNationEt.getText().toString()); jsonObject.put(&amp;quot;name&amp;quot;, mJsonNameEt.getText().toString()); jsonObject.put(&amp;quot;address&amp;quot;, mJsonAddressEt.getText().toString()); jsonObject.put(&amp;quot;age&amp;quot;, mJsonAgeEt.getText().toString()); }catch (JSONException e){ e.printStackTrace(); } receiveObject(jsonObject); }  
2-2. Receive Object private void receiveObject(JSONObject data){ recyclerView.setVisibility(View.GONE); objectResultLo.setVisibility(View.VISIBLE); try{ mReceiveTv.setText(data.toString()); mReceiveNationTv.setText(&amp;quot;nation : &amp;quot;+data.getString(&amp;quot;nation&amp;quot;)); mReceiveNameTv.setText(&amp;quot;name : &amp;quot;+data.getString(&amp;quot;nation&amp;quot;)); mReceiveAddressTv.setText(&amp;quot;address : &amp;quot;+data.getString(&amp;quot;address&amp;quot;)); mReceiveAgeTv.</description>
    </item>
    
    <item>
      <title>[안드로이드] 현재 시간, 현재 날짜 구하기 (SimpleDateFormat)</title>
      <link>https://kiwinam.com/posts/6/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/6/</guid>
      <description>[안드로이드] 현재 시간, 현재 날짜 구하기 (SimpleDateFormat) Android 현재 시간, 현재 날짜 구하기
SimpleDateFormat
Preview  Step1. 현재 시간 가져오기.
 long now = System.currentTimeMillis();   Step2. Date 생성하기
 Date date = new Date(now);   Step3. 가져오고 싶은 형식으로 가져오기
 SimpleDateFormat sdf = new SimpleDateFormat(&amp;ldquo;yyyy-MM-dd&amp;rdquo;);
 String getTime = sdf.format(date);
   
Result 
MainActivity.java
package charlie.myapplication; import android.support.v7.app.AppCompatActivity; import android.os.Bundle; import android.view.View; import android.</description>
    </item>
    
    <item>
      <title>[안드로이드] 안드로이드 플랫폼의 특징</title>
      <link>https://kiwinam.com/posts/3/</link>
      <pubDate>Sun, 26 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/3/</guid>
      <description>안드로이드의 개념  - 안드로이드는 모바일 운영체제의 한 종류로, 어플리케이션이 실행할 때 필요한 자원을 공급해 주고 하드웨어에 대신 명령을 전달하고, 전체 시스템을 보호해주는 역할을 함.
 모바일 어플리케이션을 개발하는 유용한 미들웨어도 제공하는 소프트웨어.
 리눅스 커널과 모바일 플랫폼으로 구성.
  안드로이드 플랫폼의 특징 
 어플리케이션 프레임웍
 안드로이드 어플리케이션의 기본 뼈대가 되는 주요 요소인 컴포넌트들과 다양한 모바일 기능을 활용할 수 있도록 다양한 API 를 제공한다.
  달빅 가상 머신</description>
    </item>
    
    <item>
      <title>[Android] Activity 생명주기 (Activity LifeCycle)</title>
      <link>https://kiwinam.com/posts/2/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/2/</guid>
      <description>액티비티 (Activity) 생명주기 액티비티는 액티브 상태, 포즈 상태, 스탑 상태 이렇게 3가지의 기본 상태를 가지는데요.
간단하게 3가지의 기본 상태에 대해 설명해 드리겠습니다.
 액티브(Active) 상태
 화면 맨 앞으로 나와 사용자의 액션 (터치나 데이터 입력)과 상호 작용하는 액티비티.  포즈(Pause) 상태
 다른 액티비티로 가린 상태이지만 액티비티 일부가 사용자에게 여전히 보이는 상태.  스탑(Stop) 상태
 다른 액티비티에 완전히 가려져 사용자에게 안보이는 상태.
 이 상태도 살아 있는 상태로 액티비티를 유지하기 위한 정보를 유지.</description>
    </item>
    
    <item>
      <title>[안드로이드] 최초 실행 확인 법 - SharedPreferences</title>
      <link>https://kiwinam.com/posts/1/</link>
      <pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/1/</guid>
      <description>안드로이드 최초 실행 확인 법  안드로이드 최초 실행을 확인하는 방법은
SharedPreferences 를 사용 하는 것입니다.
SharedPreferences 는 안드로이드에서 DB를 사용하지 않고 값을 저장할 때 사용합니다.
예를 들어 문자열, boolean 값 등..
SharedPreferences 는 파일 형태로 저장되며 App 을 삭제하기 전까지 유지가 되고, App 을 삭제하면 지워지고,
앱에서 Data 지우기를 해도 지워집니다.
[Activity]
//최초 실행 여부 판단하는 구문 SharedPreferences pref = getSharedPreferences(&amp;quot;isFirst&amp;quot;, Activity.MODE_PRIVATE); boolean first = pref.getBoolean(&amp;quot;isFirst&amp;quot;, false); if(first==false){ Log.</description>
    </item>
    
  </channel>
</rss>