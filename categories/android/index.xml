<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on Kiwinam</title>
    <link>https://kiwinam.com/categories/android/</link>
    <description>Recent content in Android on Kiwinam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 19 May 2017 16:54:00 +0900</lastBuildDate>
    
	<atom:link href="https://kiwinam.com/categories/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[안드로이드] Android Studio 레이아웃 프리뷰(Preview) 한글 깨짐</title>
      <link>https://kiwinam.com/posts/13/</link>
      <pubDate>Fri, 19 May 2017 16:54:00 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/13/</guid>
      <description>[안드로이드] Android Studio 레이아웃 프리뷰(Preview) 한글 깨짐
안드로이드 스튜디오 Preview 가 깨지는 현상의 원인은 아이러니 하게도 한글 표시 폰트가 한글을 제대로 표시 처리하지 못하기 때문입니다.
현재 안드로이드 스튜디오에서 설정된 ko 언어 표시는 &amp;ldquo;NotoSansCJK&amp;rdquo; 로 되어 있습니다.
이 폰트를 한글 처리가 가능한 폰트로 바꿔주면 됩니다. 보통 많이 사용하는 폰트로 바꿔주시면 됩니다.

설정 파일이 위치한 곳은
안드로이드 설치가 되어 있는 폴더/plugins/android/lib/layoutlib/data/fonts/fonts.xml
(OS X 에선 Application/AndroidStudio (우클릭/Show Package Content) 입니다.)
여기에서 family lang = &amp;ldquo;ko&amp;rdquo; 라고 되어있는 곳에 설정된 폰트를 아무 폰트로 바꿔주시면 됩니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] - Pull to refresh 당겨서 새로고침 (SwipeRefreshLayout)</title>
      <link>https://kiwinam.com/posts/12/</link>
      <pubDate>Tue, 16 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/12/</guid>
      <description>[안드로이드] - Pull to refresh 당겨서 새로고침 (SwipeRefreshLayout)
당겨서 새로고침 (pull to refresh) 는 많은 APP에서 만날수 있는 친숙한 패턴입니다.
&amp;lsquo;구글 가이드&amp;rsquo;에도 수동으로 동기화 하는 방법 중 제스처를 통해 내용물 갱신을 시작하도록 요구합니다.
이 패턴을 구현한 수많은 라이브러리가 있지만 구글에서 제공하는 가장 간단한 라이브러리를 구현하는 방법에 대해 설명해드리겠습니다.
1. Result 
2. Step by Step 2-1. 라이브러리 추가 SwipeRefreshLayout 를 통해 당겨서 새로고침을 구현하기 위해 추가해야할 라이브러리는 &amp;lsquo;com.android.support:design&amp;rsquo; 라이브러리입니다. 예제에서 RecyclerView 위에서 &amp;lsquo; pull to refresh &amp;rsquo; 제스쳐를 실행할거라</description>
    </item>
    
    <item>
      <title>[안드로이드] RecyclerView [3] Divider 구분선 넣기</title>
      <link>https://kiwinam.com/posts/10/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/10/</guid>
      <description>[안드로이드] RecyclerView [3] Divider 구분선 넣기

( Divider 가 적용된 RecyclerView 예제, 출저 Google Material Design Guide )

RecyclerView 에서 구분선 혹은 구분자를 추가하는 방법은 다양하게 있습니다.
하지만 ListView xml 처럼 간단하게 android:divider 로 지정할 수 있는 부분이 아니라 코드적으로 구현 할 수 있습니다.
그 중 가장 간단한 방법에 대해 설명해드리겠습니다.

1. Result 구분선 (Divider) 만 넣는 방법과 구분선 + 공백 넣는 방법에 대해 설명해드리겠습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] RecyclerView [2] OnItemClick 리스너 구현</title>
      <link>https://kiwinam.com/posts/9/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/9/</guid>
      <description>[안드로이드] RecyclerView [2] OnItemClick 리스너 구현

RecyclerView 에서는 ListView에서와는 다르게
ClickListener 를 따로 구현해서 등록해줘야합니다.
Adapter에서 OnClick 를 구현해줘도 되고 제가 구현한 방법 처럼 따로 클래스를 만들어서
ItemTouchListener 를 구현해도 됩니다.

1. Result 
2. Step by Step 2-1. RecyclerView 구현 안드로이드 RecyclerView 의 간단한 구현 방법은 이전 포스팅 글로 대체 하겠습니다.
[[안드로이드] RecyclerView 간단한 사용법]

2-2. OnItemTouchListener RecyclerItemClickListener.java
public class RecyclerItemClickListener implements RecyclerView.OnItemTouchListener { private OnItemClickListener mListener; public interface OnItemClickListener { void onItemClick(View view, int position); void onLongItemClick(View view, int position); } GestureDetector mGestureDetector; public RecyclerItemClickListener(Context context, final RecyclerView recyclerView, OnItemClickListener listener) { mListener = listener; mGestureDetector = new GestureDetector(context, new GestureDetector.</description>
    </item>
    
    <item>
      <title>[안드로이드] RecyclerView [1] 간단한 사용법</title>
      <link>https://kiwinam.com/posts/8/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/8/</guid>
      <description>[안드로이드] RecyclerView 간단한 사용법

안드로이드에서 Recycler View 를 간단하게 사용하는 방법에 대해 포스팅 하겠습니다!
안드로이드를 배우다 보면 리사이클러 뷰, recycler view, list view 에 관해 상당히 많이 보고 듣게 되는데요&amp;hellip;
도대체 저 리사이클러뷰가 어떤 녀석이길래 저렇게 많이 언급 되는지 가볍게 알아보고 가도록 하겠습니다.
먼저 프로 앱등이인 전 앱스토어의 사진을 하나 가져 왔습니다
(코쓱)

위 사진을 보면 빨간 테두리에 있는 내용들은
큰 틀은 (포맷) 변하지 않고 콘텐츠 (앱 로고와 이름, 카테고리) 만 변하는 것을 알 수 있습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] JSON 데이터 주고 받기</title>
      <link>https://kiwinam.com/posts/7/</link>
      <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/7/</guid>
      <description>[안드로이드] JSON 데이터 주고 받기 1. Result 
2. Step by step 데이터를 JSON Obejct 로 보내고 받는 방법 2-1. Send Object private void sendObject(){ JSONObject jsonObject = new JSONObject(); try{ jsonObject.put(&amp;quot;nation&amp;quot;, mJsonNationEt.getText().toString()); jsonObject.put(&amp;quot;name&amp;quot;, mJsonNameEt.getText().toString()); jsonObject.put(&amp;quot;address&amp;quot;, mJsonAddressEt.getText().toString()); jsonObject.put(&amp;quot;age&amp;quot;, mJsonAgeEt.getText().toString()); }catch (JSONException e){ e.printStackTrace(); } receiveObject(jsonObject); }  
2-2. Receive Object private void receiveObject(JSONObject data){ recyclerView.setVisibility(View.GONE); objectResultLo.setVisibility(View.VISIBLE); try{ mReceiveTv.setText(data.toString()); mReceiveNationTv.setText(&amp;quot;nation : &amp;quot;+data.getString(&amp;quot;nation&amp;quot;)); mReceiveNameTv.setText(&amp;quot;name : &amp;quot;+data.getString(&amp;quot;nation&amp;quot;)); mReceiveAddressTv.setText(&amp;quot;address : &amp;quot;+data.getString(&amp;quot;address&amp;quot;)); mReceiveAgeTv.</description>
    </item>
    
    <item>
      <title>[안드로이드] 현재 시간, 현재 날짜 구하기 (SimpleDateFormat)</title>
      <link>https://kiwinam.com/posts/6/</link>
      <pubDate>Tue, 18 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/6/</guid>
      <description>[안드로이드] 현재 시간, 현재 날짜 구하기 (SimpleDateFormat) Android 현재 시간, 현재 날짜 구하기
SimpleDateFormat
Preview  Step1. 현재 시간 가져오기.
 long now = System.currentTimeMillis();   Step2. Date 생성하기
 Date date = new Date(now);   Step3. 가져오고 싶은 형식으로 가져오기
 SimpleDateFormat sdf = new SimpleDateFormat(&amp;ldquo;yyyy-MM-dd&amp;rdquo;);
 String getTime = sdf.format(date);
   
Result 
MainActivity.java
package charlie.myapplication; import android.support.v7.app.AppCompatActivity; import android.os.Bundle; import android.view.View; import android.</description>
    </item>
    
    <item>
      <title>[안드로이드] 안드로이드 플랫폼의 특징</title>
      <link>https://kiwinam.com/posts/3/</link>
      <pubDate>Sun, 26 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/3/</guid>
      <description>안드로이드의 개념  - 안드로이드는 모바일 운영체제의 한 종류로, 어플리케이션이 실행할 때 필요한 자원을 공급해 주고 하드웨어에 대신 명령을 전달하고, 전체 시스템을 보호해주는 역할을 함.
 모바일 어플리케이션을 개발하는 유용한 미들웨어도 제공하는 소프트웨어.
 리눅스 커널과 모바일 플랫폼으로 구성.
  안드로이드 플랫폼의 특징 
 어플리케이션 프레임웍
 안드로이드 어플리케이션의 기본 뼈대가 되는 주요 요소인 컴포넌트들과 다양한 모바일 기능을 활용할 수 있도록 다양한 API 를 제공한다.
  달빅 가상 머신</description>
    </item>
    
    <item>
      <title>[Android] Activity 생명주기 (Activity LifeCycle)</title>
      <link>https://kiwinam.com/posts/2/</link>
      <pubDate>Sat, 25 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/2/</guid>
      <description>액티비티 (Activity) 생명주기 액티비티는 액티브 상태, 포즈 상태, 스탑 상태 이렇게 3가지의 기본 상태를 가지는데요.
간단하게 3가지의 기본 상태에 대해 설명해 드리겠습니다.
 액티브(Active) 상태
 화면 맨 앞으로 나와 사용자의 액션 (터치나 데이터 입력)과 상호 작용하는 액티비티.  포즈(Pause) 상태
 다른 액티비티로 가린 상태이지만 액티비티 일부가 사용자에게 여전히 보이는 상태.  스탑(Stop) 상태
 다른 액티비티에 완전히 가려져 사용자에게 안보이는 상태.
 이 상태도 살아 있는 상태로 액티비티를 유지하기 위한 정보를 유지.</description>
    </item>
    
    <item>
      <title>[안드로이드] 최초 실행 확인 법 - SharedPreferences</title>
      <link>https://kiwinam.com/posts/1/</link>
      <pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/1/</guid>
      <description>안드로이드 최초 실행 확인 법  안드로이드 최초 실행을 확인하는 방법은
SharedPreferences 를 사용 하는 것입니다.
SharedPreferences 는 안드로이드에서 DB를 사용하지 않고 값을 저장할 때 사용합니다.
예를 들어 문자열, boolean 값 등..
SharedPreferences 는 파일 형태로 저장되며 App 을 삭제하기 전까지 유지가 되고, App 을 삭제하면 지워지고,
앱에서 Data 지우기를 해도 지워집니다.
[Activity]
//최초 실행 여부 판단하는 구문 SharedPreferences pref = getSharedPreferences(&amp;quot;isFirst&amp;quot;, Activity.MODE_PRIVATE); boolean first = pref.getBoolean(&amp;quot;isFirst&amp;quot;, false); if(first==false){ Log.</description>
    </item>
    
  </channel>
</rss>