<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>안드로이드 on 키위남</title>
    <link>https://kiwinam.com/tags/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C/</link>
    <description>Recent content in 안드로이드 on 키위남</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 29 Dec 2018 10:35:56 +0900</lastBuildDate>
    
	<atom:link href="https://kiwinam.com/tags/%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[안드로이드] 네비게이션 드로어 사용법</title>
      <link>https://kiwinam.com/posts/android-navigation-drawer/</link>
      <pubDate>Sat, 29 Dec 2018 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-navigation-drawer/</guid>
      <description>[안드로이드] 네비게이션 드로어 (Navigation drawer) 사용법

구글 머티리얼 디자인 가이드 중 네비게이션 드로어
네비게이션 드로어는 화면 왼쪽 가장자리에 위치해 있고 앱을 탐색할 수 있는 하나의 패널입니다.
이걸 잘 활용한다면 특정 메뉴를 찾기 위해 클릭이 많이 일어나는 (Deep depth) 문제를 해결할 수 있습니다.
평상시에는 화면 밖에 가려져 있지만 왼쪽 스와이프나 왼쪽 상단 메뉴 버튼을 클릭하면 위 사진처럼 나옵니다.
그럼 네비게이션 드로어를 어떻게 구현하는지 알아보겠습니다.


1. Result  이번 포스팅에서 진행한 네비게이션 드로어 결과 화면</description>
    </item>
    
    <item>
      <title>[안드로이드] startActivityForResult ,onActivityResult 사용법</title>
      <link>https://kiwinam.com/posts/android-start-activity-for-result/</link>
      <pubDate>Fri, 09 Feb 2018 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-start-activity-for-result/</guid>
      <description>[안드로이드] startActivityForResult ,onActivityResult 사용법

안드로이드 개발을 진행하다 보면 단순히 액티비티를 전환하고 끝! 이 아니라
후속 액티비티에서 작업한 결과물을
호출한 액티비티에서 사용하고 싶은 경우가 왕왕 있습니다.

예를 들자면 회원가입을 진행할 때 ,
회원가입 액티비티에서 다이얼로그를 띄우고
다이얼로그에서 주소를 입력하게 하고, 완료 버튼을 누르면 다시 액티비티로 가져오는 경우나,
(이 경우는 CallBack 으로도 가능합니다.)

자신의 앱에서 카메라 앱을 호출하고 그 결과를 다시 자신의 앱으로 가져오는 경우가 있습니다.
이러한 경우 사용하는 방법이 startActivityForResult 입니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] 엑셀 파일 생성, 내보내기</title>
      <link>https://kiwinam.com/posts/android-create-excel/</link>
      <pubDate>Thu, 07 Dec 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-create-excel/</guid>
      <description>[안드로이드] 엑셀 파일 생성, 내보내기
어플리케이션을 만들다 보면 사용자가 저장한 데이터를 가공하여 내보내 주는 기능을 구현할 때가 있습니다.
데이터 가공에 가장 적합한 엑셀 파일을 만들어 공유하는 것을 목표로 포스팅하겠습니다.

1. Result 

2. Step by Step 2-1. Apache POI 2-1-1. 라이브러리 다운로드  안드로이드 (자바) 에서 엑셀 파일을 바로 쓰고 읽고 수정 하는 일련의 작업들을 바로 수행할 수는 없습니다. 이러한 작업을 할 수 있도록 도와주는 라이브러리인 Apache 에서 제공하는 POI 라이브러리를 이용하여 엑셀을 다루도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] - android.content.res.Resources$NotFoundException: String resource ID #0x1</title>
      <link>https://kiwinam.com/posts/android-string-resource/</link>
      <pubDate>Thu, 23 Nov 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-string-resource/</guid>
      <description>[안드로이드] - android.content.res.Resources$NotFoundException: String resource ID #0x1
FATAL EXCEPTION: main Process: , PID: 4012 android.content.res.Resources$NotFoundException: String resource ID #0x9  안드로이드 개발 중
android.content.res.Resources$NotFoundException: String resource ID #0x1
라는 에러를 보았습니다.

TextView 에 setText 메소드를 사용할 때 Int 타입의 데이터를 넣어서 발생하는 에러입니다.
보통 setText 메서드에 숫자를 바로 넣으면 바로 빨간색 밑줄이 생겨서 에러인 것을 알아보기 쉬운데,
( Int type 을 바로 넣는 경우 빨간 줄이 보입니다.)</description>
    </item>
    
    <item>
      <title>[안드로이드] 카카오톡 공유 기능 , 카카오 링크 API 사용법</title>
      <link>https://kiwinam.com/posts/android-share-kakaotalk/</link>
      <pubDate>Thu, 23 Nov 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-share-kakaotalk/</guid>
      <description>[안드로이드] 카카오톡 공유 기능 , 카카오 링크 API 사용법
어플리케이션 기획 중에 콘텐츠 공유 기능이 있는 경우가 많습니다.
공유할 수 있는 수단이 다양하게 있지만 대한민국에서 카카오 플랫폼이 가장 넓은 플랫폼이라 할 수 있죠.
그래서 카카오톡 링크 API 를 사용하여 아래 사진과 같이 공유 기능을 구현하는 경우가 많습니다.
(사진 출처 : Kakao Developer , 카카오 서비스 API 소개 )

Kakao Developer에 개발자 문서가 아주 상세히 기술 되어 있습니다.
저도 카카오 개발자센터에서 제공하는 문서를 보고 구현 했었지만 참고하실 분들을 위해 카카오 링크 기능 구현하는 것을 진행해 보도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] Bottom sheet dialog 사용하기</title>
      <link>https://kiwinam.com/posts/android-bottom-sheet-dialog/</link>
      <pubDate>Wed, 22 Nov 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-bottom-sheet-dialog/</guid>
      <description>[안드로이드] Bottom sheet dialog 사용하기
머티리얼 디자인에서 바텀 시트는 두 가지의 종류가 있습니다
영구 바닥 시트
모달 바텀 시트 (우)

이번 예제에서 만들어볼 것은 모달 바텀 시트입니다.
모달 바텀 시트는 기존의 콘텐츠와 상호 작용 하거나 다이얼로그의 대체로 사용됩니다.
먼저 결과물입니다.

1. Result 
2. Step by Step 2-1. 라이브러리 추가  BottomSheet 를 사용하기 위해선 Design 라이브러리가 필요합니다.  build.gradle (app)
compile &#39;com.android.support:design:26.+&#39;  
2-2. 바텀 시트 다이얼로그 레이아웃 생성  다이얼로그 레이아웃은 구성하기 나름입니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] EditText 화폐 단위 표시 (세자리 콤마)</title>
      <link>https://kiwinam.com/posts/android-edittext-comma/</link>
      <pubDate>Tue, 21 Nov 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-edittext-comma/</guid>
      <description>[안드로이드] EditText 화폐 단위 표시 (세자리 콤마)
사용자에게 화폐를 입력 받아 표시해줄 경우가 종종 있습니다.
이럴 때 입력 받은 숫자를 원화 단위 (1,000,000 과 같이 ) 로 바로 바꿔주는 방법입니다.

1. Result 
2. Step by Step 2-1 Layout 구성 &amp;lt;RelativeLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot; xmlns:app=&amp;quot;http://schemas.android.com/apk/res-auto&amp;quot; xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;match_parent&amp;quot; tools:context=&amp;quot;com.example.charlie.wontest.MainActivity&amp;quot;&amp;gt; &amp;lt;EditText android:id=&amp;quot;@+id/wonEt&amp;quot; android:hint=&amp;quot;금액을 입력해주세요.&amp;quot; android:paddingLeft=&amp;quot;8dp&amp;quot; android:textSize=&amp;quot;18sp&amp;quot; android:layout_width=&amp;quot;match_parent&amp;quot; android:layout_height=&amp;quot;wrap_content&amp;quot; android:layout_marginLeft=&amp;quot;8dp&amp;quot; android:layout_marginRight=&amp;quot;8dp&amp;quot; android:layout_marginTop=&amp;quot;8dp&amp;quot; android:layout_centerInParent=&amp;quot;true&amp;quot; android:inputType=&amp;quot;number&amp;quot; android:gravity=&amp;quot;end&amp;quot; /&amp;gt; &amp;lt;/RelativeLayout&amp;gt;   Layout 은 최대한 간단하게 구성해봤습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] 커스텀 다이얼로그 [2] - ClickListener, Callback</title>
      <link>https://kiwinam.com/posts/android-custom-dialog-click-callback/</link>
      <pubDate>Sun, 15 Oct 2017 10:35:56 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-custom-dialog-click-callback/</guid>
      <description>[안드로이드] 커스텀 다이얼로그 [2] - ClickListener, Callback
지난 포스팅에선 커스텀 다이얼로그를 생성하고 보여주는 것을 해보았습니다.
이번엔 커스텀 다이얼로그 안에서의 클릭 이벤트 (ClickListener) 를 어떻게 다루는지에 대해 설명해드리도록 하겠습니다.
일단 쉽게 생각하면 다이얼로그도 View 에 속하는 컴포넌트로
다루는 방법이 크게 다르지 않다는 점입니다.
먼저 간단하게 CustomDialog 에서 ClickListener 를 등록해보도록 하겠습니다.
그 이후에 Activity -&amp;gt; Dialog -&amp;gt; Activity 로 파라미터를 넘기는 것을 구현하겠습니다.

먼저 결과입니다.
1. Result 2. Step by Step 2-1.</description>
    </item>
    
    <item>
      <title>[안드로이드] 커스텀 다이얼로그 [1] - 생성</title>
      <link>https://kiwinam.com/posts/android-custom-dialog/</link>
      <pubDate>Fri, 18 Aug 2017 10:25:38 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-custom-dialog/</guid>
      <description>[안드로이드] 커스텀 다이얼로그 [1] - 생성
안드로이드 커스텀 다이얼로그 만드는 법.

안드로이드에서 제공하는 AlertDialog 에선 단순하게 Title, Message 등 텍스트만 표시가 가능했었습니다.
Custom Dialog 에서는 말 그대로 내가 원하는 다이얼로그 모양을 만들고 기능을 추가할 수 있습니다.
Activity 에서 Dialog 로 값을 넘길 수도 있고
Dialog 에서 Activity 로 결과 값을 넘겨줄 수도 있습니다.
이번 포스팅에선 간단히 만드는법만 소개하고 다음 포스팅에서 더 자세히 다루겠습니다.

먼저 결과입니다.
1. Result</description>
    </item>
    
    <item>
      <title>[안드로이드] Android Studio 레이아웃 프리뷰(Preview) 한글 깨짐</title>
      <link>https://kiwinam.com/posts/android-layout-preview-korean/</link>
      <pubDate>Fri, 19 May 2017 16:54:00 +0900</pubDate>
      
      <guid>https://kiwinam.com/posts/android-layout-preview-korean/</guid>
      <description>[안드로이드] Android Studio 레이아웃 프리뷰(Preview) 한글 깨짐
안드로이드 스튜디오 Preview 가 깨지는 현상의 원인은 아이러니 하게도 한글 표시 폰트가 한글을 제대로 표시 처리하지 못하기 때문입니다.
현재 안드로이드 스튜디오에서 설정된 ko 언어 표시는 &amp;ldquo;NotoSansCJK&amp;rdquo; 로 되어 있습니다.
이 폰트를 한글 처리가 가능한 폰트로 바꿔주면 됩니다. 보통 많이 사용하는 폰트로 바꿔주시면 됩니다.

설정 파일이 위치한 곳은
안드로이드 설치가 되어 있는 폴더/plugins/android/lib/layoutlib/data/fonts/fonts.xml
(OS X 에선 Application/AndroidStudio (우클릭/Show Package Content) 입니다.)
여기에서 family lang = &amp;ldquo;ko&amp;rdquo; 라고 되어있는 곳에 설정된 폰트를 아무 폰트로 바꿔주시면 됩니다.</description>
    </item>
    
  </channel>
</rss>