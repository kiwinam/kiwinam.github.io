<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RecyclerView on 키위남</title>
    <link>https://kiwinam.com/tags/recyclerview/</link>
    <description>Recent content in RecyclerView on 키위남</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Fri, 28 Apr 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kiwinam.com/tags/recyclerview/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[안드로이드] RecyclerView [3] Divider 구분선 넣기</title>
      <link>https://kiwinam.com/posts/android-recyclerview-divider/</link>
      <pubDate>Fri, 28 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/android-recyclerview-divider/</guid>
      <description>[안드로이드] RecyclerView [3] Divider 구분선 넣기

( Divider 가 적용된 RecyclerView 예제, 출저 Google Material Design Guide )

RecyclerView 에서 구분선 혹은 구분자를 추가하는 방법은 다양하게 있습니다.
하지만 ListView xml 처럼 간단하게 android:divider 로 지정할 수 있는 부분이 아니라 코드적으로 구현 할 수 있습니다.
그 중 가장 간단한 방법에 대해 설명해드리겠습니다.

1. Result 구분선 (Divider) 만 넣는 방법과 구분선 + 공백 넣는 방법에 대해 설명해드리겠습니다.</description>
    </item>
    
    <item>
      <title>[안드로이드] RecyclerView [2] OnItemClick 리스너 구현</title>
      <link>https://kiwinam.com/posts/android-recyclerview-click/</link>
      <pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/android-recyclerview-click/</guid>
      <description>[안드로이드] RecyclerView [2] OnItemClick 리스너 구현

RecyclerView 에서는 ListView에서와는 다르게
ClickListener 를 따로 구현해서 등록해줘야합니다.
Adapter에서 OnClick 를 구현해줘도 되고 제가 구현한 방법 처럼 따로 클래스를 만들어서
ItemTouchListener 를 구현해도 됩니다.

1. Result 
2. Step by Step 2-1. RecyclerView 구현 안드로이드 RecyclerView 의 간단한 구현 방법은 이전 포스팅 글로 대체 하겠습니다.
[[안드로이드] RecyclerView 간단한 사용법]

2-2. OnItemTouchListener RecyclerItemClickListener.java
public class RecyclerItemClickListener implements RecyclerView.OnItemTouchListener { private OnItemClickListener mListener; public interface OnItemClickListener { void onItemClick(View view, int position); void onLongItemClick(View view, int position); } GestureDetector mGestureDetector; public RecyclerItemClickListener(Context context, final RecyclerView recyclerView, OnItemClickListener listener) { mListener = listener; mGestureDetector = new GestureDetector(context, new GestureDetector.</description>
    </item>
    
    <item>
      <title>[안드로이드] RecyclerView [1] 간단한 사용법</title>
      <link>https://kiwinam.com/posts/android-recyclerview/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/android-recyclerview/</guid>
      <description>[안드로이드] RecyclerView 간단한 사용법

안드로이드에서 Recycler View 를 간단하게 사용하는 방법에 대해 포스팅 하겠습니다!
안드로이드를 배우다 보면 리사이클러 뷰, recycler view, list view 에 관해 상당히 많이 보고 듣게 되는데요&amp;hellip;
도대체 저 리사이클러뷰가 어떤 녀석이길래 저렇게 많이 언급 되는지 가볍게 알아보고 가도록 하겠습니다.
먼저 프로 앱등이인 전 앱스토어의 사진을 하나 가져 왔습니다
(코쓱)

위 사진을 보면 빨간 테두리에 있는 내용들은
큰 틀은 (포맷) 변하지 않고 콘텐츠 (앱 로고와 이름, 카테고리) 만 변하는 것을 알 수 있습니다.</description>
    </item>
    
  </channel>
</rss>