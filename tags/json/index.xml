<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSON on Kiwinam</title>
    <link>https://kiwinam.com/tags/json/</link>
    <description>Recent content in JSON on Kiwinam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Wed, 03 May 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kiwinam.com/tags/json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Java] JSP - JSON 데이터 주고 받기 - JSONParser</title>
      <link>https://kiwinam.com/posts/jsp-json-parser/</link>
      <pubDate>Wed, 03 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/jsp-json-parser/</guid>
      <description>[Java] JSP - JSON 데이터 주고 받기 - JSONParser

json-simple 라이브러리를 이용하여
Android - JSP - JAVA
JSON 데이터 처리하는 방법입니다.

Step1 . JSON 데이터 생성 (Android) JSONObject sendObject = new JSONObject(); JSONArray sendArray = new JSONArray(); // 각 정보마다 Object 로 만들어 Array 에 담는 반복문 try { for(int i = 0; i &amp;lt; 10; i++ ){ JSONObject informationObject = new JSONObject(); informationObject.put(&amp;quot;name&amp;quot;,&amp;quot;Charlie&amp;quot;+i); informationObject.put(&amp;quot;number&amp;quot;,i+1); sendArray.put(informationObject); } sendObject.</description>
    </item>
    
    <item>
      <title>[안드로이드] JSON 데이터 주고 받기</title>
      <link>https://kiwinam.com/posts/android-json-parse/</link>
      <pubDate>Mon, 24 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kiwinam.com/posts/android-json-parse/</guid>
      <description>[안드로이드] JSON 데이터 주고 받기 1. Result 
2. Step by step 데이터를 JSON Obejct 로 보내고 받는 방법 2-1. Send Object private void sendObject(){ JSONObject jsonObject = new JSONObject(); try{ jsonObject.put(&amp;quot;nation&amp;quot;, mJsonNationEt.getText().toString()); jsonObject.put(&amp;quot;name&amp;quot;, mJsonNameEt.getText().toString()); jsonObject.put(&amp;quot;address&amp;quot;, mJsonAddressEt.getText().toString()); jsonObject.put(&amp;quot;age&amp;quot;, mJsonAgeEt.getText().toString()); }catch (JSONException e){ e.printStackTrace(); } receiveObject(jsonObject); }  
2-2. Receive Object private void receiveObject(JSONObject data){ recyclerView.setVisibility(View.GONE); objectResultLo.setVisibility(View.VISIBLE); try{ mReceiveTv.setText(data.toString()); mReceiveNationTv.setText(&amp;quot;nation : &amp;quot;+data.getString(&amp;quot;nation&amp;quot;)); mReceiveNameTv.setText(&amp;quot;name : &amp;quot;+data.getString(&amp;quot;nation&amp;quot;)); mReceiveAddressTv.setText(&amp;quot;address : &amp;quot;+data.getString(&amp;quot;address&amp;quot;)); mReceiveAgeTv.</description>
    </item>
    
  </channel>
</rss>